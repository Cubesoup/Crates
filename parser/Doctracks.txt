The Language tracks
BNF Converter


%This txt2tags file is machine-generated by the BNF-converter
%Process by txt2tags to generate html or latex



This document was automatically generated by the //BNF-Converter//. It was generated together with the lexer, the parser, and the abstract syntax module, which guarantees that the document matches with the implementation of the language (provided no hand-hacking has taken place).

==The lexical structure of tracks==

===Literals===
String literals //String// have the form
``"``//x//``"``}, where //x// is any sequence of any characters
except ``"`` unless preceded by ``\``.


Integer literals //Integer// are nonempty sequences of digits.




===Reserved words and symbols===
The set of reserved words is the set of terminals appearing in the grammar. Those reserved words that consist of non-letter characters are called symbols, and they are treated in a different way from those that are similar to identifiers. The lexer follows rules familiar from languages like Haskell, C, and Java, including longest match and spacing conventions.

The reserved words used in tracks are the following:
  | ``artists`` | ``bpm`` | ``crate`` | ``cues``
  | ``duration`` | ``genre`` | ``label`` | ``location``
  | ``release`` | ``releases`` | ``title`` | ``track``
  | ``tracks`` | ``year`` |  | 

The symbols used in tracks are the following:
  | ; | { | = | ,
  | } |  |  | 

===Comments===
There are no single-line comments in the grammar.There are no multiple-line comments in the grammar.

==The syntactic structure of tracks==
Non-terminals are enclosed between < and >. 
The symbols -> (production),  **|**  (union) 
and **eps** (empty rule) belong to the BNF notation. 
All other symbols are terminals.

  | //[String]// | -> | **eps**
  |  |  **|**  | //String// //[String]// 
  |  |  **|**  | **eps**
  |  |  **|**  | //String// 
  |  |  **|**  | //String// ``;`` //[String]// 
  | //[Integer]// | -> | **eps**
  |  |  **|**  | //Integer// //[Integer]// 
  |  |  **|**  | **eps**
  |  |  **|**  | //Integer// 
  |  |  **|**  | //Integer// ``;`` //[Integer]// 
  | //[ReleaseBlock]// | -> | **eps**
  |  |  **|**  | //ReleaseBlock// //[ReleaseBlock]// 
  |  |  **|**  | **eps**
  |  |  **|**  | //ReleaseBlock// 
  |  |  **|**  | //ReleaseBlock// ``;`` //[ReleaseBlock]// 
  | //[TrackBlock]// | -> | **eps**
  |  |  **|**  | //TrackBlock// //[TrackBlock]// 
  |  |  **|**  | **eps**
  |  |  **|**  | //TrackBlock// 
  |  |  **|**  | //TrackBlock// ``;`` //[TrackBlock]// 
  | //TrackBlock// | -> | ``track`` ``{`` ``title`` ``=`` //String// ``,`` ``location`` ``=`` //String// ``,`` ``artists`` ``=`` //[String]// ``,`` ``bpm`` ``=`` //Integer// ``,`` ``duration`` ``=`` //Integer// ``,`` ``cues`` ``=`` //[Integer]// ``,`` ``genre`` ``=`` //String// ``}`` 
  | //ReleaseBlock// | -> | ``release`` ``{`` ``title`` ``=`` //String// ``,`` ``year`` ``=`` //Integer// ``,`` ``label`` ``=`` //String// ``,`` ``tracks`` ``=`` //[String]// ``}`` 
  | //CrateBlock// | -> | ``crate`` ``{`` ``title`` ``=`` //String// ``,`` ``tracks`` ``=`` //[TrackBlock]// ``,`` ``releases`` ``=`` //[ReleaseBlock]// ``}`` 


